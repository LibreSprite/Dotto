
[window]
width = 800
height = 600

[main]
plugin = test
max-image-width = 2048
max-image-height = 2048

[material.opengl.3d]
vertex=`
//section<attributes>
in vec3 position;
//section<uniforms>
uniform mat4 projection;
uniform mat4 transform;
//section<main-init>
  vec4 screenPosition = projection * (transform * vec4(position, 1.0));
//section<write>
  gl_Position = screenPosition;
`

[material.opengl.texture-color]
vertex=`
//section<attributes>
in vec2 uv;
//section<outputs>
out vec2 _uv;
//section<write>
  _uv = uv;
`
fragment=`
//section<attributes>
in vec2 _uv;
//section<uniforms>
uniform sampler2D texDiffuse;
//section<outputs>
out vec4 frag_color;
//section<write>
  frag_color = texture(texDiffuse, _uv);
`

[material.opengl.vertex-color]
vertex=`
//section<attributes>
in vec4 color;
//section<outputs>
out vec4 _color;
//section<write>
  _color = color;
`
fragment=`
//section<attributes>
in vec4 _color;
//section<outputs>
out vec4 frag_color;
//section<write>
  frag_color = vec4(_color.xyz, 1.0);
`

[material.opengl]
vertex =`
//section<attributes>
//section<uniforms>
//section<outputs>
//section<functions>
//section<main-init>
void main() {
//section<main>
//section<write>
//section<after-main>
}

`
fragment =`
//section<attributes>
//section<uniforms>
//section<outputs>
//section<functions>
//section<main-init>
void main() {
//section<main>
//section<write>
//section<after-main>
}
`

[material.opengl.position]
fs-attribute=`
  in vec3 position;
  out vec2 bob;
`

fs-main=`

`
